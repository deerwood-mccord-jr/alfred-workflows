<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.renameaction</string>
	<key>connections</key>
	<dict>
		<key>2D996A5F-76DB-4596-BAC7-C918B0EFD902</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D307CADD-36C3-4EF0-98C3-1CA47407436A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>947A1C83-3935-488B-BBBC-A01B072DD9A0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4B30C050-DEC1-4375-8B11-20FA04A89596</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2D996A5F-76DB-4596-BAC7-C918B0EFD902</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D307CADD-36C3-4EF0-98C3-1CA47407436A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D6AD9678-C017-40CD-BD91-5E4102C39AD3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D6AD9678-C017-40CD-BD91-5E4102C39AD3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>130D3F3F-2318-4073-A4A3-6AED97A70266</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Rename files and folders</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>RenameAction</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>mv "${origFullPath}" "${1}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D6AD9678-C017-40CD-BD91-5E4102C39AD3</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>130D3F3F-2318-4073-A4A3-6AED97A70266</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>ObjC.import('stdlib')

function run(argv) {
  const origExtension = $.getenv("origExtension") 
  const newExtension = origExtension.length === 0 ? "" : "." + origExtension

  const newBasenameNoExtension = argv[0]
  const newFullPath = $.getenv("origDirname") + "/" + newBasenameNoExtension + newExtension
  
  if (newBasenameNoExtension === $.getenv("origBasenameNoExtension")) {
    return JSON.stringify({ "items": [{
      "title": "Rename to",
      "subtitle": "File extension is preserved",
      "valid": false
    }]})
  }
  
  if (Application('Finder').exists(Path(newFullPath))) {
    return JSON.stringify({ "items": [{
      "title": "Path already exists!",
      "subtitle": newFullPath,
      "valid": false
    }]})
  }
  
  return JSON.stringify({ "items": [{
    "title": "Rename to",
    "subtitle": newFullPath,
    "valid": true,
    "arg": newFullPath
  }]})
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Path extension is preserved</string>
				<key>title</key>
				<string>Rename to</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>D307CADD-36C3-4EF0-98C3-1CA47407436A</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>function run(argv) {
  const fullPath = argv[0]
  const dirname = $(fullPath).stringByDeletingLastPathComponent.js
  const basenameNoExtension = $(fullPath).lastPathComponent.stringByDeletingPathExtension.js
  const extension = $(fullPath).pathExtension.js

  return JSON.stringify({
    "alfredworkflow" : {
      "arg": basenameNoExtension,
      "variables": {
        "origFullPath": fullPath,
        "origDirname": dirname,
        "origBasenameNoExtension": basenameNoExtension,
        "origExtension": extension
      }
    }
  })
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>2D996A5F-76DB-4596-BAC7-C918B0EFD902</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<integer>0</integer>
				<key>filetypes</key>
				<array/>
				<key>name</key>
				<string>Rename</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>4B30C050-DEC1-4375-8B11-20FA04A89596</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>count</key>
				<integer>1</integer>
				<key>keychar</key>
				<string>←</string>
				<key>keycode</key>
				<integer>123</integer>
				<key>keymod</key>
				<integer>11665408</integer>
				<key>overridewithargument</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.dispatchkeycombo</string>
			<key>uid</key>
			<string>947A1C83-3935-488B-BBBC-A01B072DD9A0</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Rename a file or folder, preserving the extension.

Use Alfred to pick what you want to rename and choose `Rename` as the action. Alfred’s main window will appear and you type a new name.

![Rename File Action](images/about/fileaction.png)</string>
	<key>uidata</key>
	<dict>
		<key>130D3F3F-2318-4073-A4A3-6AED97A70266</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<real>815</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>2D996A5F-76DB-4596-BAC7-C918B0EFD902</key>
		<dict>
			<key>xpos</key>
			<real>225</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>4B30C050-DEC1-4375-8B11-20FA04A89596</key>
		<dict>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>947A1C83-3935-488B-BBBC-A01B072DD9A0</key>
		<dict>
			<key>note</key>
			<string>Select argument</string>
			<key>xpos</key>
			<real>425</real>
			<key>ypos</key>
			<real>150</real>
		</dict>
		<key>D307CADD-36C3-4EF0-98C3-1CA47407436A</key>
		<dict>
			<key>xpos</key>
			<real>425</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>D6AD9678-C017-40CD-BD91-5E4102C39AD3</key>
		<dict>
			<key>xpos</key>
			<real>625</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>version</key>
	<string>2022.1</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
