<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.shortfilms</string>
	<key>connections</key>
	<dict>
		<key>2EF753EF-6194-4420-9096-C6892565EC96</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>355240A2-7F83-4E87-B774-3423B8FCB001</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>325E0A83-2F46-4696-80F4-7D41608F65DC</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5777145B-F30B-4A39-8BB6-AA07F81401E1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>BFA5B490-4D6E-4BAF-931F-07282EC4A4B3</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Download video to watch later</string>
				<key>vitoclose</key>
				<true/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>2EF753EF-6194-4420-9096-C6892565EC96</string>
				<key>modifiers</key>
				<integer>262144</integer>
				<key>modifiersubtext</key>
				<string>Copy video link to clipboard</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>355240A2-7F83-4E87-B774-3423B8FCB001</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F5FD6323-96E1-41A8-817E-E2391373262A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5777145B-F30B-4A39-8BB6-AA07F81401E1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>355240A2-7F83-4E87-B774-3423B8FCB001</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>BFA5B490-4D6E-4BAF-931F-07282EC4A4B3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>355240A2-7F83-4E87-B774-3423B8FCB001</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F54CC291-7B66-4D5A-A599-BD512EC630DD</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>97081E49-C4BE-4918-A447-B006C76E98FD</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F5FD6323-96E1-41A8-817E-E2391373262A</key>
		<array/>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Stream from a selection of short films</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>ShortFilms</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>shorts</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Updating list may take a while…</string>
				<key>script</key>
				<string></string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>shortfilms</string>
				<key>subtext</key>
				<string>Stream from a selection of short films</string>
				<key>title</key>
				<string>ShortFilms</string>
				<key>type</key>
				<integer>8</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>325E0A83-2F46-4696-80F4-7D41608F65DC</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F5FD6323-96E1-41A8-817E-E2391373262A</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string># Checks
if [[ -z "${alfred_workflow_bundleid}" ]]; then
  echo 'Workflow is missing bundle identifier!' &gt;&amp;2
  exit 1
fi

# Plist contents
read -r -d '' plist_contents &lt;&lt;ENDPLIST
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
&lt;dict&gt;
    &lt;key&gt;Label&lt;/key&gt;
    &lt;string&gt;${alfred_workflow_bundleid}&lt;/string&gt;
    &lt;key&gt;ProgramArguments&lt;/key&gt;
    &lt;array&gt;
        &lt;string&gt;/usr/bin/osascript&lt;/string&gt;
        &lt;string&gt;-e&lt;/string&gt;
        &lt;string&gt;if application id &amp;quot;com.runningwithcrayons.Alfred&amp;quot; is running then tell application id &amp;quot;com.runningwithcrayons.Alfred&amp;quot; to run trigger &amp;quot;build_list&amp;quot; in workflow &amp;quot;${alfred_workflow_bundleid}&amp;quot;&lt;/string&gt;
    &lt;/array&gt;
    &lt;key&gt;StartCalendarInterval&lt;/key&gt;
    &lt;dict&gt;
        &lt;key&gt;Hour&lt;/key&gt;
        &lt;integer&gt;00&lt;/integer&gt;
        &lt;key&gt;Minute&lt;/key&gt;
        &lt;integer&gt;20&lt;/integer&gt;
    &lt;/dict&gt;
&lt;/dict&gt;
&lt;/plist&gt;
ENDPLIST

# Main
readonly launchagents_dir="${HOME}/Library/LaunchAgents"
readonly plist_file="${launchagents_dir}/${alfred_workflow_bundleid}.plist"

if [[ "${auto_refresh}" -eq 0 ]]; then
  # Exit early if plist does not exist
  [[ -f "${plist_file}" ]] || exit 0

  # Uninstall agent
  launchctl bootout "gui/$(id -u "${USER}")" "${plist_file}"
  rm "${plist_file}"
else
  # Exit early if plist exists
  [[ -f "${plist_file}" ]] &amp;&amp; exit 0

  # Install agent
  mkdir -p "${launchagents_dir}"
  echo "${plist_contents}" &gt; "${plist_file}"

  # Short of the Week updates at about 10:00 EST
  # Change plist to use correct renew time according to current time zone
  readonly renew_hour="$(date -r $(TZ=EST date -jf "%H" 10 +%s) +"%H")"
  /usr/libexec/PlistBuddy -c "Set StartCalendarInterval:Hour ${renew_hour}" "${plist_file}"

  launchctl bootstrap "gui/$(id -u "${USER}")" "${plist_file}"
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>355240A2-7F83-4E87-B774-3423B8FCB001</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>if [[ "$(mdfind kMDItemCFBundleIdentifier = io.mpv)" ]]; then
  PATH="$(./_sharedresources 'youtubedl')"
  video_player='mpv'
elif [[ "$(mdfind kMDItemCFBundleIdentifier = com.colliderli.iina)" ]]; then
  video_player='iina'
elif [[ "$(mdfind kMDItemCFBundleIdentifier = org.videolan.vlc)" ]]; then
  video_player='vlc'
else
  warning 'To play a stream you need mpv, iina, or vlc.'
fi

open -a "${video_player}" --args "${1}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>5777145B-F30B-4A39-8BB6-AA07F81401E1</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./downmedia-download 'video' "${1}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>BFA5B490-4D6E-4BAF-931F-07282EC4A4B3</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>ignoredynamicplaceholders</key>
				<false/>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>2EF753EF-6194-4420-9096-C6892565EC96</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>availableviaurlhandler</key>
				<false/>
				<key>triggerid</key>
				<string>build_list</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>F54CC291-7B66-4D5A-A599-BD512EC630DD</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./shortfilms update_list</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>97081E49-C4BE-4918-A447-B006C76E98FD</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Stream from a selection of short films, powered by [Short of the Week](https://www.shortoftheweek.com/).

Run `shorts` and it’ll show a list of the latest films. Pick one and it’ll start streaming. Alternatively, add ⌘ to download the video (requires [DownMedia](https://github.com/vitorgalvao/alfred-workflows/tree/master/DownMedia)), ⌥ to see its synopsis, or ⌃ to copy the short’s link to the clipboard.

![](https://i.imgur.com/nhXigIF.png)

Short of the Week publishes a new short every day and building the initial list takes a few seconds, so after download the list is cached for one day. It is auto-updated every day unless you disable the behaviour by changing the `auto_refresh` Workflow Environment Variable to `0`.

To play a stream you need [mpv](http://mpv.io/), [IINA](https://lhc70000.github.io/iina/), or [VLC](http://www.videolan.org/vlc/index.html).</string>
	<key>uidata</key>
	<dict>
		<key>2EF753EF-6194-4420-9096-C6892565EC96</key>
		<dict>
			<key>xpos</key>
			<real>240</real>
			<key>ypos</key>
			<real>280</real>
		</dict>
		<key>325E0A83-2F46-4696-80F4-7D41608F65DC</key>
		<dict>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>355240A2-7F83-4E87-B774-3423B8FCB001</key>
		<dict>
			<key>note</key>
			<string>launchd agent</string>
			<key>xpos</key>
			<real>460</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>5777145B-F30B-4A39-8BB6-AA07F81401E1</key>
		<dict>
			<key>xpos</key>
			<real>240</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>97081E49-C4BE-4918-A447-B006C76E98FD</key>
		<dict>
			<key>xpos</key>
			<real>240</real>
			<key>ypos</key>
			<real>410</real>
		</dict>
		<key>BFA5B490-4D6E-4BAF-931F-07282EC4A4B3</key>
		<dict>
			<key>xpos</key>
			<real>240</real>
			<key>ypos</key>
			<real>150</real>
		</dict>
		<key>F54CC291-7B66-4D5A-A599-BD512EC630DD</key>
		<dict>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>410</real>
		</dict>
		<key>F5FD6323-96E1-41A8-817E-E2391373262A</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<real>645</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>variables</key>
	<dict>
		<key>auto_refresh</key>
		<string>1</string>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>2022.3</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
